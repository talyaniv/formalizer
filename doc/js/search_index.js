var search_data = {"index":{"searchIndex":["aboutcontroller","activesupport","applicationcontroller","applicationhelper","democontroller","dummy","application","filldetailscontrollertest","filldetailshelper","formfieldtest","nokogiri","formtest","formalizer","configerror","fieldnotfound","filenotfound","form","formfield","formfieldparammissing","formfillerror","formtemplateerror","notuniqueid","pathorhtmlrequired","requiredfield","utils","wrongfilecontent","wrongformtemplate","wrongvalue","wrongvalueclass","formalizerconfigtest","formalizerformfieldtest","formalizerformtest","formalizertest","nokogiri","homecontroller","homecontrollertest","homehelper","logger","minitest","object","string","utilstest","add_form()","add_form_field()","export_form_to_html()","export_form_to_pdf()","export_to_html()","export_to_pdf()","fill()","fill_field()","fill_fields()","fill_form()","final_path()","find_file()","generate_fields_form()","html_template()","index()","load_config()","new()","new()","new()","render_html()","show()","show()","to_bool()","value=()","gemfile","gemfile.lock","mit-license","readme","rakefile","formalizer.gemspec","formalizer_tasks.rake","gemfile","gemfile.lock","readme","rakefile","application.js","fill_details.js","home.js","application.css","bootstrap_yeti.css","fill_details.css","form.css","home.css","config.ru","form1.html","invalid_html_formalizer_tags_without_ids.html","invalid_html_no_formalizer_tags.html","development.sqlite3","test.sqlite3","development.log","passenger.3000.log","test.log","passenger.3000.pid.lock","404.html","422.html","500.html","favicon.ico","passenger.3000.pid.lock"],"longSearchIndex":["aboutcontroller","activesupport","applicationcontroller","applicationhelper","democontroller","dummy","dummy::application","filldetailscontrollertest","filldetailshelper","formfieldtest","formfieldtest::nokogiri","formtest","formalizer","formalizer::configerror","formalizer::fieldnotfound","formalizer::filenotfound","formalizer::form","formalizer::formfield","formalizer::formfieldparammissing","formalizer::formfillerror","formalizer::formtemplateerror","formalizer::notuniqueid","formalizer::pathorhtmlrequired","formalizer::requiredfield","formalizer::utils","formalizer::wrongfilecontent","formalizer::wrongformtemplate","formalizer::wrongvalue","formalizer::wrongvalueclass","formalizerconfigtest","formalizerformfieldtest","formalizerformtest","formalizertest","formalizertest::nokogiri","homecontroller","homecontrollertest","homehelper","logger","minitest","object","string","utilstest","formalizer#add_form()","formalizer#add_form_field()","formalizer#export_form_to_html()","formalizer#export_form_to_pdf()","formalizer::form#export_to_html()","formalizer::form#export_to_pdf()","formalizer::form#fill()","formalizer#fill_field()","formalizer#fill_fields()","democontroller#fill_form()","formalizer::utils::final_path()","formalizer::utils::find_file()","formalizer#generate_fields_form()","democontroller#html_template()","democontroller#index()","formalizer#load_config()","formalizer::new()","formalizer::form::new()","formalizer::formfield::new()","formalizer::formfield#render_html()","aboutcontroller#show()","homecontroller#show()","string#to_bool()","formalizer::formfield#value=()","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["AboutController","","AboutController.html","",""],["ActiveSupport","","ActiveSupport.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["DemoController","","DemoController.html","",""],["Dummy","","Dummy.html","",""],["Dummy::Application","","Dummy/Application.html","",""],["FillDetailsControllerTest","","FillDetailsControllerTest.html","",""],["FillDetailsHelper","","FillDetailsHelper.html","",""],["FormFieldTest","","FormFieldTest.html","",""],["FormFieldTest::Nokogiri","","FormFieldTest/Nokogiri.html","",""],["FormTest","","FormTest.html","",""],["Formalizer","","Formalizer.html","",""],["Formalizer::ConfigError","","Formalizer/ConfigError.html","",""],["Formalizer::FieldNotFound","","Formalizer/FieldNotFound.html","",""],["Formalizer::FileNotFound","","Formalizer/FileNotFound.html","",""],["Formalizer::Form","","Formalizer/Form.html","","<p>Holds a single form template and its binding\n"],["Formalizer::FormField","","Formalizer/FormField.html","","<p>Holds attributes for a single field in a form.\n<p>Attributes\n<p><code>id</code> - Unique textal identifier for the field. …\n"],["Formalizer::FormFieldParamMissing","","Formalizer/FormFieldParamMissing.html","",""],["Formalizer::FormFillError","","Formalizer/FormFillError.html","",""],["Formalizer::FormTemplateError","","Formalizer/FormTemplateError.html","",""],["Formalizer::NotUniqueId","","Formalizer/NotUniqueId.html","",""],["Formalizer::PathOrHtmlRequired","","Formalizer/PathOrHtmlRequired.html","",""],["Formalizer::RequiredField","","Formalizer/RequiredField.html","",""],["Formalizer::Utils","","Formalizer/Utils.html","",""],["Formalizer::WrongFileContent","","Formalizer/WrongFileContent.html","",""],["Formalizer::WrongFormTemplate","","Formalizer/WrongFormTemplate.html","",""],["Formalizer::WrongValue","","Formalizer/WrongValue.html","",""],["Formalizer::WrongValueClass","","Formalizer/WrongValueClass.html","",""],["FormalizerConfigTest","","FormalizerConfigTest.html","",""],["FormalizerFormFieldTest","","FormalizerFormFieldTest.html","",""],["FormalizerFormTest","","FormalizerFormTest.html","",""],["FormalizerTest","","FormalizerTest.html","",""],["FormalizerTest::Nokogiri","","FormalizerTest/Nokogiri.html","",""],["HomeController","","HomeController.html","",""],["HomeControllerTest","","HomeControllerTest.html","",""],["HomeHelper","","HomeHelper.html","",""],["Logger","","Logger.html","",""],["Minitest","","Minitest.html","",""],["Object","","Object.html","",""],["String","","String.html","",""],["UtilsTest","","UtilsTest.html","",""],["add_form","Formalizer","Formalizer.html#method-i-add_form","(form_id, form_hash)","<p>Adds a form source (path or html) to the forms hash Validates that the id\nis unique\n<p><code>form_id</code> - a unique …\n"],["add_form_field","Formalizer","Formalizer.html#method-i-add_form_field","(form_field_hash)","<p>Adds a FormField object to the hash Aalidates that the id is unique\n<p><code>form_field_hash</code> - a hash describing …\n"],["export_form_to_html","Formalizer","Formalizer.html#method-i-export_form_to_html","(form_id, tag = nil)","<p>Exports a form to html\n<p><code>form_id</code> - the form id to export\n<p><code>tag</code> - narrows down the passed fields list to fields …\n"],["export_form_to_pdf","Formalizer","Formalizer.html#method-i-export_form_to_pdf","(form_id, tag = nil)","<p>Exports a form to pdf\n<p><code>form_id</code> - the form id to export\n<p><code>tag</code> - narrows down the passed fields list to fields …\n"],["export_to_html","Formalizer::Form","Formalizer/Form.html#method-i-export_to_html","()","<p>Exports the filled form into a raw html string\n"],["export_to_pdf","Formalizer::Form","Formalizer/Form.html#method-i-export_to_pdf","(filename = 'pdf')","<p>Exports the filled form into a PDF file uwing Wicked PDF gem\n"],["fill","Formalizer::Form","Formalizer/Form.html#method-i-fill","(fields)","<p>Binds fields to a template\n<p><code>fields</code> - Hash of id =&gt; FormField object. Fields that do not\nexist in the …\n"],["fill_field","Formalizer","Formalizer.html#method-i-fill_field","(field_id, field_value)","<p>Fills one form field with content\n<p><code>field_id</code> - the field id\n<p><code>field_value</code> - value to fill the field\n"],["fill_fields","Formalizer","Formalizer.html#method-i-fill_fields","(field_params)","<p>Fills multiple form fields with content\n<p><code>field_params</code> - Hash of {id: value} objects to fill multuple\nfields …\n\n"],["fill_form","DemoController","DemoController.html#method-i-fill_form","()","<p>Form POSTed and processed here\n"],["final_path","Formalizer::Utils","Formalizer/Utils.html#method-c-final_path","(path)","<p>tries getting the full local path to a relative/absolute path (image src\nattribute, stylesheet rel attribute) …\n"],["find_file","Formalizer::Utils","Formalizer/Utils.html#method-c-find_file","(file_path, read = true, search_paths = SEARCH_PATHS)",""],["generate_fields_form","Formalizer","Formalizer.html#method-i-generate_fields_form","(locale = I18n.locale, form_action = '', tag = nil)","<p>Generates an HTML form with fields to fill.\n<p><code>locale</code> - relevant with enum/multiple type fields, defaults …\n"],["html_template","DemoController","DemoController.html#method-i-html_template","()","<p>Demo page has a link to this action. Renders the empty, unfilled demo\ntemplate\n"],["index","DemoController","DemoController.html#method-i-index","()","<p>Formalizer&#39;s generated form has no authenticity_token field.  This\nfield can (and should) be used, …\n"],["load_config","Formalizer","Formalizer.html#method-i-load_config","(config_file)","<p>Loads config from YAML file\n<p><code>config_file</code> - path to the config file, absolute or relative to\napp&#39;s &#39;config&#39; …\n\n"],["new","Formalizer","Formalizer.html#method-c-new","(config_file = 'formalizer.yml')","<p>Constructor Tries loading configuration from YAML file, falling back to an\nempty config Caching form …\n"],["new","Formalizer::Form","Formalizer/Form.html#method-c-new","(id, path_or_html)","<p>Constructor\n<p><code>id</code> - Unique textal identifier for the form\n<p><code>path_or_html</code> - Either a path to a template html …\n"],["new","Formalizer::FormField","Formalizer/FormField.html#method-c-new","(params)","<p>see usage examples at the end:\n"],["render_html","Formalizer::FormField","Formalizer/FormField.html#method-i-render_html","(parent_node, locale = I18n.locale)","<p>Renders the field as HTML control\n<p><code>parent_node</code> - the HTML parent under which to render (needed by\nNokogiri …\n"],["show","AboutController","AboutController.html#method-i-show","()",""],["show","HomeController","HomeController.html#method-i-show","()",""],["to_bool","String","String.html#method-i-to_bool","()",""],["value=","Formalizer::FormField","Formalizer/FormField.html#method-i-value-3D","(new_value)","<p>Since we deal with html, value must be a String\n"],["Gemfile","","Gemfile.html","","<p>ruby &#39;2.2.2&#39; source &#39;rubygems.org&#39;\n<p># Declare your gem&#39;s dependencies in formalizer.gemspec. …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  formalizer (0.9.1)\n    nokogiri\n    rails (~&gt; 4.2.3)\n    wicked_pdf\n    wkhtmltopdf-binary</pre>\n"],["MIT-LICENSE","","MIT-LICENSE.html","","<p>Copyright 2015 Tal Yaniv\n<p>Permission is hereby granted, free of charge, to any person obtaining a\ncopy of …\n"],["README","","README_md.html","","<p>Formalizer\n<p>Formalizer is an open-source gem for simplifying HTML-form filling and\nexporting:\n<p>Store blank ...\n"],["Rakefile","","Rakefile.html","","<p>begin\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&#39;bundler/setup&#39;</span>\n</pre>\n<p>rescue LoadError\n"],["formalizer.gemspec","","formalizer_gemspec.html","","<p>$:.push File.expand_path(“../lib”, __FILE__)\n<p># Maintain your gem&#39;s version: require “formalizer/version” …\n"],["formalizer_tasks.rake","","lib/tasks/formalizer_tasks_rake.html","","<p>desc “Explaining what the task does” task :formalizer do\n\n<pre class=\"ruby\"><span class=\"ruby-comment\"># Task goes here</span>\n</pre>\n<p>end\n"],["Gemfile","","test/dummy/Gemfile.html","","<p>ruby &#39;2.2.2&#39; source &#39;rubygems.org&#39;\n<p>gem &#39;wicked_pdf&#39; gem &#39;wkhtmltopdf-binary&#39; …\n"],["Gemfile.lock","","test/dummy/Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  wicked_pdf (1.0.0)\n  wkhtmltopdf-binary (0.9.9.3)</pre>\n<p>PLATFORMS …\n"],["README","","test/dummy/README_rdoc.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get the\napplication up and …\n"],["Rakefile","","test/dummy/Rakefile.html","","<p># Add your own tasks in files placed in lib/tasks ending in .rake, # for\nexample lib/tasks/capistrano.rake …\n"],["application.js","","test/dummy/app/assets/javascripts/application_js.html","","<p>// This is a manifest file that&#39;ll be compiled into application.js,\nwhich will include all the files …\n"],["fill_details.js","","test/dummy/app/assets/javascripts/fill_details_js.html","","<p>// Place all the behaviors and hooks related to the matching controller\nhere. // All this logic will …\n"],["home.js","","test/dummy/app/assets/javascripts/home_js.html","","<p>// Place all the behaviors and hooks related to the matching controller\nhere. // All this logic will …\n"],["application.css","","test/dummy/app/assets/stylesheets/application_css.html","","<p>img.scheme-container {\n\n<pre>display: block;\n margin-left: auto;\n margin-right: auto;</pre>\n<p>}\n"],["bootstrap_yeti.css","","test/dummy/app/assets/stylesheets/bootstrap_yeti_css.html","","<p>@import\nurl(“fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,700italic,400,300,700\n…\n"],["fill_details.css","","test/dummy/app/assets/stylesheets/fill_details_css.html","","<p>Place all the styles related to the matching controller here. They will\nautomatically be included in …\n"],["form.css","","test/dummy/app/assets/stylesheets/form_css.html","","<p>html, body {\n\n<pre>font-family: Arial, sans-serif;</pre>\n<p>}\n"],["home.css","","test/dummy/app/assets/stylesheets/home_css.html","","<p>Place all the styles related to the matching controller here. They will\nautomatically be included in …\n"],["config.ru","","test/dummy/config_ru.html","","<p># This file is used by Rack-based servers to start the application.\n<p>require ::File.expand_path(&#39;../config/environment&#39;, …\n"],["form1.html","","test/dummy/config/form1_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html lang=“en” class=“no-js”&gt;\n\n<pre>&lt;head&gt;\n  &lt;title&gt;Confidentiality ...</pre>\n"],["invalid_html_formalizer_tags_without_ids.html","","test/dummy/config/invalid_html_formalizer_tags_without_ids_html.html","","<p>&lt;html&gt; &lt;body&gt; &lt;formalizer&gt;tag without\nid&lt;/formalizer&gt; &lt;/body&gt; &lt;/html&gt; …\n"],["invalid_html_no_formalizer_tags.html","","test/dummy/config/invalid_html_no_formalizer_tags_html.html","","<p>&lt;html&gt; &lt;body&gt; no formalizer tag &lt;/body&gt; &lt;/html&gt;\n"],["development.sqlite3","","test/dummy/db/development_sqlite3.html","",""],["test.sqlite3","","test/dummy/db/test_sqlite3.html","",""],["development.log","","test/dummy/log/development_log.html","","<p>Started HEAD “/” for 127.0.0.1 at 2015-11-10 22:35:52 +0200 Processing by\nRails::WelcomeController#index …\n"],["passenger.3000.log","","test/dummy/log/passenger_3000_log.html","","<p>[ 2015-11-10 22:35:46.9647 25957/0x7fff75d6b000 age/Wat/Main.cpp:1264 ]:\nStarting PassengerAgent watchdog… …\n"],["test.log","","test/dummy/log/test_log.html","","\n<pre>\u001b[1m\u001b[36m (0.1ms)\u001b[0m  \u001b[1mbegin transaction\u001b[0m</pre>\n<p>UtilsTest: test_file_found\n\n<pre>\u001b[1m\u001b[35m (0.1ms)\u001b[0m  rollback ...</pre>\n"],["passenger.3000.pid.lock","","test/dummy/passenger_3000_pid_lock.html","",""],["404.html","","test/dummy/public/404_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;The page you were looking for doesn&#39;t exist (404)&lt;/title&gt; ...</pre>\n"],["422.html","","test/dummy/public/422_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;The change you wanted was rejected (422)&lt;/title&gt; ...</pre>\n"],["500.html","","test/dummy/public/500_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;We&#39;re sorry, but something went wrong (500)&lt;/title&gt; ...</pre>\n"],["favicon.ico","","test/dummy/public/favicon_ico.html","",""],["passenger.3000.pid.lock","","test/dummy/tmp/pids/passenger_3000_pid_lock.html","",""]]}}